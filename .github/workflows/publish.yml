name: Publish

on:
  push:
    branches:
      - master
      - feature*
      - release*
      - hotfix*

concurrency: 
  group: publish-${{ github.ref }}
  cancel-in-progress: true

jobs:
  should-release:
    name: Should Release
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v3
      - name: Node
        uses: actions/setup-node@v3
      - name: Deps
        run: npm i -g semver
      - name: Run should-release
        run: node ./scripts/should-release.js
      - name: Current Version
        id: current-version
        run: echo 'CURRENT_VERSION='$(node -p -e "require('./package.json').version") >> $GITHUB_OUTPUT
      - name: Check Skip Release
        id: skip-release
        run: echo 'SKIP='$(cat .skip-release) >> $GITHUB_OUTPUT
    outputs:
      SKIP: ${{ steps.skip-release.outputs.SKIP }}
      CURRENT_VERSION: ${{ steps.current-version.outputs.CURRENT_VERSION }}
  
  build:
    needs: [should-release]
    if: needs.should-release.outputs.SKIP != 'true'
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v3
      - name: Node
        uses: actions/setup-node@v3
      - name: Discord Message on Failure
        if: failure()
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{
            "embeds": [
              {
                "title": "ui-tailwind-theme/${{ github.ref_name }}",
                "description": "** FAILED ** / Deu ruim =[",
                "color": ff0000,
                "footer": {
                  "text": "${{ github.sha }} - ${{ github.event.head_commit.message }}",
                }
              }
            ]
          }' \
          "${{ secrets.PI_DISCORD_WEBHOOK }}"
      - name: Cache 
        id: cache-nodemodules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: packages-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            packages-
      - name: Install Pnpm
        run: npm i -g pnpm
      - name: Pnpm Install
        run: pnpm install
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm run build
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: ./

  publish:
    needs: [build, should-release]
    if: github.ref == 'refs/heads/master' && needs.should-release.outputs.SKIP != 'true'
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v3
      - name: Node
        uses: actions/setup-node@v3
      - name: Discord Message on Failure
        if: failure()
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{
            "embeds": [
              {
                "title": "ui-tailwind-theme/${{ github.ref_name }}",
                "description": "** FAILED ** / Deu ruim =[",
                "color": ff0000,
                "footer": {
                  "text": "${{ github.sha }} - ${{ github.event.head_commit.message }}",
                }
              }
            ]
          }' \
          "${{ secrets.PI_DISCORD_WEBHOOK }}"
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
      - name: Setup NPM Registry
        run: echo '//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}' > ~/.npmrc && npm config get registry && npm whoami
      - name: Publish
        run: npm publish ./
      - name: Create tag
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/v${{ needs.should-release.outputs.CURRENT_VERSION }}",
              sha: context.sha
            })
  notify:
    needs: [should-release, build, publish]
    if: always()
    name: Notify
    runs-on: ubuntu-latest
    steps:
      - name: Discord Message on Success
        run: |
          curl -X POST -H "Content-Type: application/json" \
            -d '{
              "embeds": [
                {
                  "title": "ui-tailwind-theme/${{ github.ref_name }}",
                  "description": "ðŸŽ¨ **DEPLOYED** / Uma linha de CSS!",
                  "color": 00ff00,
                  "footer": {
                    "text": "${{ github.sha }} - ${{ github.event.head_commit.message }}",
                  }
                }
              ]
            }' \
            "${{ secrets.PI_DISCORD_WEBHOOK }}"